<?php
/**
 * ShipmentResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  Boxture\V2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Boxture API v2
 *
 * Detailed documentation and test tool for the Boxture API v2
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@boxture.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Boxture\V2\Model;

use \ArrayAccess;
use \Boxture\V2\ObjectSerializer;

/**
 * ShipmentResponse Class Doc Comment
 *
 * @category Class
 * @description Lists shipments associated to the authorized user.
 * @package  Boxture\V2
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ShipmentResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ShipmentResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'sgid' => 'string',
        'humanId' => 'string',
        'serviceTypeId' => 'string',
        'state' => 'string',
        'channelId' => 'string',
        'companyId' => 'string',
        'courierId' => 'string',
        'quantity' => 'int',
        'weight' => 'string',
        'vehicleTypeId' => 'string',
        'comments' => 'string',
        'jobNumber' => 'string',
        'reference' => 'string',
        'customerReference' => 'string',
        'content' => 'string',
        'servicedAreaGroup' => 'string',
        'flightNumber' => 'string',
        'waybillNr' => 'string',
        'price' => 'float',
        'currency' => 'string',
        'distance' => 'string',
        'duration' => 'string',
        'finalConsignee' => 'string',
        'createdAt' => '\DateTime',
        'updatedAt' => '\DateTime',
        'droppedoffAt' => '\DateTime',
        'pickedupAt' => '\DateTime',
        'serviceTypes' => '\Boxture\V2\Model\ShipmentResponseServiceTypes',
        'origin' => '\Boxture\V2\Model\LocationResponse',
        'destination' => '\Boxture\V2\Model\LocationResponse',
        'customer' => '\Boxture\V2\Model\UserResponseMinimal',
        'user' => '\Boxture\V2\Model\UserResponseMinimal',
        'courier' => '\Boxture\V2\Model\UserResponseMinimal',
        'company' => '\Boxture\V2\Model\CompanyResponseMinimal',
        'retailer' => '\Boxture\V2\Model\RetailerResponseMinimal',
        'lines' => '\Boxture\V2\Model\ShipmentLineResponse[]',
        'shipmentStateTransitions' => '\Boxture\V2\Model\ShipmentStateTransitionResponse[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'id' => null,
        'sgid' => null,
        'humanId' => null,
        'serviceTypeId' => null,
        'state' => null,
        'channelId' => null,
        'companyId' => null,
        'courierId' => null,
        'quantity' => 'int32',
        'weight' => null,
        'vehicleTypeId' => null,
        'comments' => null,
        'jobNumber' => null,
        'reference' => null,
        'customerReference' => null,
        'content' => null,
        'servicedAreaGroup' => null,
        'flightNumber' => null,
        'waybillNr' => null,
        'price' => 'float',
        'currency' => null,
        'distance' => null,
        'duration' => null,
        'finalConsignee' => null,
        'createdAt' => 'date-time',
        'updatedAt' => 'date-time',
        'droppedoffAt' => 'date-time',
        'pickedupAt' => 'date-time',
        'serviceTypes' => null,
        'origin' => null,
        'destination' => null,
        'customer' => null,
        'user' => null,
        'courier' => null,
        'company' => null,
        'retailer' => null,
        'lines' => null,
        'shipmentStateTransitions' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'sgid' => 'sgid',
        'humanId' => 'human_id',
        'serviceTypeId' => 'service_type_id',
        'state' => 'state',
        'channelId' => 'channel_id',
        'companyId' => 'company_id',
        'courierId' => 'courier_id',
        'quantity' => 'quantity',
        'weight' => 'weight',
        'vehicleTypeId' => 'vehicle_type_id',
        'comments' => 'comments',
        'jobNumber' => 'job_number',
        'reference' => 'reference',
        'customerReference' => 'customer_reference',
        'content' => 'content',
        'servicedAreaGroup' => 'serviced_area_group',
        'flightNumber' => 'flight_number',
        'waybillNr' => 'waybill_nr',
        'price' => 'price',
        'currency' => 'currency',
        'distance' => 'distance',
        'duration' => 'duration',
        'finalConsignee' => 'final_consignee',
        'createdAt' => 'created_at',
        'updatedAt' => 'updated_at',
        'droppedoffAt' => 'droppedoff_at',
        'pickedupAt' => 'pickedup_at',
        'serviceTypes' => 'service_types',
        'origin' => 'origin',
        'destination' => 'destination',
        'customer' => 'customer',
        'user' => 'user',
        'courier' => 'courier',
        'company' => 'company',
        'retailer' => 'retailer',
        'lines' => 'lines',
        'shipmentStateTransitions' => 'shipment_state_transitions'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'sgid' => 'setSgid',
        'humanId' => 'setHumanId',
        'serviceTypeId' => 'setServiceTypeId',
        'state' => 'setState',
        'channelId' => 'setChannelId',
        'companyId' => 'setCompanyId',
        'courierId' => 'setCourierId',
        'quantity' => 'setQuantity',
        'weight' => 'setWeight',
        'vehicleTypeId' => 'setVehicleTypeId',
        'comments' => 'setComments',
        'jobNumber' => 'setJobNumber',
        'reference' => 'setReference',
        'customerReference' => 'setCustomerReference',
        'content' => 'setContent',
        'servicedAreaGroup' => 'setServicedAreaGroup',
        'flightNumber' => 'setFlightNumber',
        'waybillNr' => 'setWaybillNr',
        'price' => 'setPrice',
        'currency' => 'setCurrency',
        'distance' => 'setDistance',
        'duration' => 'setDuration',
        'finalConsignee' => 'setFinalConsignee',
        'createdAt' => 'setCreatedAt',
        'updatedAt' => 'setUpdatedAt',
        'droppedoffAt' => 'setDroppedoffAt',
        'pickedupAt' => 'setPickedupAt',
        'serviceTypes' => 'setServiceTypes',
        'origin' => 'setOrigin',
        'destination' => 'setDestination',
        'customer' => 'setCustomer',
        'user' => 'setUser',
        'courier' => 'setCourier',
        'company' => 'setCompany',
        'retailer' => 'setRetailer',
        'lines' => 'setLines',
        'shipmentStateTransitions' => 'setShipmentStateTransitions'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'sgid' => 'getSgid',
        'humanId' => 'getHumanId',
        'serviceTypeId' => 'getServiceTypeId',
        'state' => 'getState',
        'channelId' => 'getChannelId',
        'companyId' => 'getCompanyId',
        'courierId' => 'getCourierId',
        'quantity' => 'getQuantity',
        'weight' => 'getWeight',
        'vehicleTypeId' => 'getVehicleTypeId',
        'comments' => 'getComments',
        'jobNumber' => 'getJobNumber',
        'reference' => 'getReference',
        'customerReference' => 'getCustomerReference',
        'content' => 'getContent',
        'servicedAreaGroup' => 'getServicedAreaGroup',
        'flightNumber' => 'getFlightNumber',
        'waybillNr' => 'getWaybillNr',
        'price' => 'getPrice',
        'currency' => 'getCurrency',
        'distance' => 'getDistance',
        'duration' => 'getDuration',
        'finalConsignee' => 'getFinalConsignee',
        'createdAt' => 'getCreatedAt',
        'updatedAt' => 'getUpdatedAt',
        'droppedoffAt' => 'getDroppedoffAt',
        'pickedupAt' => 'getPickedupAt',
        'serviceTypes' => 'getServiceTypes',
        'origin' => 'getOrigin',
        'destination' => 'getDestination',
        'customer' => 'getCustomer',
        'user' => 'getUser',
        'courier' => 'getCourier',
        'company' => 'getCompany',
        'retailer' => 'getRetailer',
        'lines' => 'getLines',
        'shipmentStateTransitions' => 'getShipmentStateTransitions'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['sgid'] = isset($data['sgid']) ? $data['sgid'] : null;
        $this->container['humanId'] = isset($data['humanId']) ? $data['humanId'] : null;
        $this->container['serviceTypeId'] = isset($data['serviceTypeId']) ? $data['serviceTypeId'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['channelId'] = isset($data['channelId']) ? $data['channelId'] : null;
        $this->container['companyId'] = isset($data['companyId']) ? $data['companyId'] : null;
        $this->container['courierId'] = isset($data['courierId']) ? $data['courierId'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['vehicleTypeId'] = isset($data['vehicleTypeId']) ? $data['vehicleTypeId'] : null;
        $this->container['comments'] = isset($data['comments']) ? $data['comments'] : null;
        $this->container['jobNumber'] = isset($data['jobNumber']) ? $data['jobNumber'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['customerReference'] = isset($data['customerReference']) ? $data['customerReference'] : null;
        $this->container['content'] = isset($data['content']) ? $data['content'] : null;
        $this->container['servicedAreaGroup'] = isset($data['servicedAreaGroup']) ? $data['servicedAreaGroup'] : null;
        $this->container['flightNumber'] = isset($data['flightNumber']) ? $data['flightNumber'] : null;
        $this->container['waybillNr'] = isset($data['waybillNr']) ? $data['waybillNr'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['distance'] = isset($data['distance']) ? $data['distance'] : null;
        $this->container['duration'] = isset($data['duration']) ? $data['duration'] : null;
        $this->container['finalConsignee'] = isset($data['finalConsignee']) ? $data['finalConsignee'] : null;
        $this->container['createdAt'] = isset($data['createdAt']) ? $data['createdAt'] : null;
        $this->container['updatedAt'] = isset($data['updatedAt']) ? $data['updatedAt'] : null;
        $this->container['droppedoffAt'] = isset($data['droppedoffAt']) ? $data['droppedoffAt'] : null;
        $this->container['pickedupAt'] = isset($data['pickedupAt']) ? $data['pickedupAt'] : null;
        $this->container['serviceTypes'] = isset($data['serviceTypes']) ? $data['serviceTypes'] : null;
        $this->container['origin'] = isset($data['origin']) ? $data['origin'] : null;
        $this->container['destination'] = isset($data['destination']) ? $data['destination'] : null;
        $this->container['customer'] = isset($data['customer']) ? $data['customer'] : null;
        $this->container['user'] = isset($data['user']) ? $data['user'] : null;
        $this->container['courier'] = isset($data['courier']) ? $data['courier'] : null;
        $this->container['company'] = isset($data['company']) ? $data['company'] : null;
        $this->container['retailer'] = isset($data['retailer']) ? $data['retailer'] : null;
        $this->container['lines'] = isset($data['lines']) ? $data['lines'] : null;
        $this->container['shipmentStateTransitions'] = isset($data['shipmentStateTransitions']) ? $data['shipmentStateTransitions'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets sgid
     *
     * @return string|null
     */
    public function getSgid()
    {
        return $this->container['sgid'];
    }

    /**
     * Sets sgid
     *
     * @param string|null $sgid Signed id able to access the portal for 8 hours
     *
     * @return $this
     */
    public function setSgid($sgid)
    {
        $this->container['sgid'] = $sgid;

        return $this;
    }

    /**
     * Gets humanId
     *
     * @return string|null
     */
    public function getHumanId()
    {
        return $this->container['humanId'];
    }

    /**
     * Sets humanId
     *
     * @param string|null $humanId Human readable/rememberable id
     *
     * @return $this
     */
    public function setHumanId($humanId)
    {
        $this->container['humanId'] = $humanId;

        return $this;
    }

    /**
     * Gets serviceTypeId
     *
     * @return string|null
     */
    public function getServiceTypeId()
    {
        return $this->container['serviceTypeId'];
    }

    /**
     * Sets serviceTypeId
     *
     * @param string|null $serviceTypeId serviceTypeId
     *
     * @return $this
     */
    public function setServiceTypeId($serviceTypeId)
    {
        $this->container['serviceTypeId'] = $serviceTypeId;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string|null
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string|null $state state
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets channelId
     *
     * @return string|null
     */
    public function getChannelId()
    {
        return $this->container['channelId'];
    }

    /**
     * Sets channelId
     *
     * @param string|null $channelId channelId
     *
     * @return $this
     */
    public function setChannelId($channelId)
    {
        $this->container['channelId'] = $channelId;

        return $this;
    }

    /**
     * Gets companyId
     *
     * @return string|null
     */
    public function getCompanyId()
    {
        return $this->container['companyId'];
    }

    /**
     * Sets companyId
     *
     * @param string|null $companyId companyId
     *
     * @return $this
     */
    public function setCompanyId($companyId)
    {
        $this->container['companyId'] = $companyId;

        return $this;
    }

    /**
     * Gets courierId
     *
     * @return string|null
     */
    public function getCourierId()
    {
        return $this->container['courierId'];
    }

    /**
     * Sets courierId
     *
     * @param string|null $courierId courierId
     *
     * @return $this
     */
    public function setCourierId($courierId)
    {
        $this->container['courierId'] = $courierId;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return int|null
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param int|null $quantity quantity
     *
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return string|null
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param string|null $weight weight
     *
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets vehicleTypeId
     *
     * @return string|null
     */
    public function getVehicleTypeId()
    {
        return $this->container['vehicleTypeId'];
    }

    /**
     * Sets vehicleTypeId
     *
     * @param string|null $vehicleTypeId vehicleTypeId
     *
     * @return $this
     */
    public function setVehicleTypeId($vehicleTypeId)
    {
        $this->container['vehicleTypeId'] = $vehicleTypeId;

        return $this;
    }

    /**
     * Gets comments
     *
     * @return string|null
     */
    public function getComments()
    {
        return $this->container['comments'];
    }

    /**
     * Sets comments
     *
     * @param string|null $comments comments
     *
     * @return $this
     */
    public function setComments($comments)
    {
        $this->container['comments'] = $comments;

        return $this;
    }

    /**
     * Gets jobNumber
     *
     * @return string|null
     */
    public function getJobNumber()
    {
        return $this->container['jobNumber'];
    }

    /**
     * Sets jobNumber
     *
     * @param string|null $jobNumber jobNumber
     *
     * @return $this
     */
    public function setJobNumber($jobNumber)
    {
        $this->container['jobNumber'] = $jobNumber;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string|null
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string|null $reference reference
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets customerReference
     *
     * @return string|null
     */
    public function getCustomerReference()
    {
        return $this->container['customerReference'];
    }

    /**
     * Sets customerReference
     *
     * @param string|null $customerReference customerReference
     *
     * @return $this
     */
    public function setCustomerReference($customerReference)
    {
        $this->container['customerReference'] = $customerReference;

        return $this;
    }

    /**
     * Gets content
     *
     * @return string|null
     */
    public function getContent()
    {
        return $this->container['content'];
    }

    /**
     * Sets content
     *
     * @param string|null $content content
     *
     * @return $this
     */
    public function setContent($content)
    {
        $this->container['content'] = $content;

        return $this;
    }

    /**
     * Gets servicedAreaGroup
     *
     * @return string|null
     */
    public function getServicedAreaGroup()
    {
        return $this->container['servicedAreaGroup'];
    }

    /**
     * Sets servicedAreaGroup
     *
     * @param string|null $servicedAreaGroup servicedAreaGroup
     *
     * @return $this
     */
    public function setServicedAreaGroup($servicedAreaGroup)
    {
        $this->container['servicedAreaGroup'] = $servicedAreaGroup;

        return $this;
    }

    /**
     * Gets flightNumber
     *
     * @return string|null
     */
    public function getFlightNumber()
    {
        return $this->container['flightNumber'];
    }

    /**
     * Sets flightNumber
     *
     * @param string|null $flightNumber flightNumber
     *
     * @return $this
     */
    public function setFlightNumber($flightNumber)
    {
        $this->container['flightNumber'] = $flightNumber;

        return $this;
    }

    /**
     * Gets waybillNr
     *
     * @return string|null
     */
    public function getWaybillNr()
    {
        return $this->container['waybillNr'];
    }

    /**
     * Sets waybillNr
     *
     * @param string|null $waybillNr waybillNr
     *
     * @return $this
     */
    public function setWaybillNr($waybillNr)
    {
        $this->container['waybillNr'] = $waybillNr;

        return $this;
    }

    /**
     * Gets price
     *
     * @return float|null
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param float|null $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string|null $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets distance
     *
     * @return string|null
     */
    public function getDistance()
    {
        return $this->container['distance'];
    }

    /**
     * Sets distance
     *
     * @param string|null $distance distance
     *
     * @return $this
     */
    public function setDistance($distance)
    {
        $this->container['distance'] = $distance;

        return $this;
    }

    /**
     * Gets duration
     *
     * @return string|null
     */
    public function getDuration()
    {
        return $this->container['duration'];
    }

    /**
     * Sets duration
     *
     * @param string|null $duration duration
     *
     * @return $this
     */
    public function setDuration($duration)
    {
        $this->container['duration'] = $duration;

        return $this;
    }

    /**
     * Gets finalConsignee
     *
     * @return string|null
     */
    public function getFinalConsignee()
    {
        return $this->container['finalConsignee'];
    }

    /**
     * Sets finalConsignee
     *
     * @param string|null $finalConsignee finalConsignee
     *
     * @return $this
     */
    public function setFinalConsignee($finalConsignee)
    {
        $this->container['finalConsignee'] = $finalConsignee;

        return $this;
    }

    /**
     * Gets createdAt
     *
     * @return \DateTime|null
     */
    public function getCreatedAt()
    {
        return $this->container['createdAt'];
    }

    /**
     * Sets createdAt
     *
     * @param \DateTime|null $createdAt createdAt
     *
     * @return $this
     */
    public function setCreatedAt($createdAt)
    {
        $this->container['createdAt'] = $createdAt;

        return $this;
    }

    /**
     * Gets updatedAt
     *
     * @return \DateTime|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updatedAt'];
    }

    /**
     * Sets updatedAt
     *
     * @param \DateTime|null $updatedAt updatedAt
     *
     * @return $this
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->container['updatedAt'] = $updatedAt;

        return $this;
    }

    /**
     * Gets droppedoffAt
     *
     * @return \DateTime|null
     */
    public function getDroppedoffAt()
    {
        return $this->container['droppedoffAt'];
    }

    /**
     * Sets droppedoffAt
     *
     * @param \DateTime|null $droppedoffAt droppedoffAt
     *
     * @return $this
     */
    public function setDroppedoffAt($droppedoffAt)
    {
        $this->container['droppedoffAt'] = $droppedoffAt;

        return $this;
    }

    /**
     * Gets pickedupAt
     *
     * @return \DateTime|null
     */
    public function getPickedupAt()
    {
        return $this->container['pickedupAt'];
    }

    /**
     * Sets pickedupAt
     *
     * @param \DateTime|null $pickedupAt pickedupAt
     *
     * @return $this
     */
    public function setPickedupAt($pickedupAt)
    {
        $this->container['pickedupAt'] = $pickedupAt;

        return $this;
    }

    /**
     * Gets serviceTypes
     *
     * @return \Boxture\V2\Model\ShipmentResponseServiceTypes|null
     */
    public function getServiceTypes()
    {
        return $this->container['serviceTypes'];
    }

    /**
     * Sets serviceTypes
     *
     * @param \Boxture\V2\Model\ShipmentResponseServiceTypes|null $serviceTypes serviceTypes
     *
     * @return $this
     */
    public function setServiceTypes($serviceTypes)
    {
        $this->container['serviceTypes'] = $serviceTypes;

        return $this;
    }

    /**
     * Gets origin
     *
     * @return \Boxture\V2\Model\LocationResponse|null
     */
    public function getOrigin()
    {
        return $this->container['origin'];
    }

    /**
     * Sets origin
     *
     * @param \Boxture\V2\Model\LocationResponse|null $origin origin
     *
     * @return $this
     */
    public function setOrigin($origin)
    {
        $this->container['origin'] = $origin;

        return $this;
    }

    /**
     * Gets destination
     *
     * @return \Boxture\V2\Model\LocationResponse|null
     */
    public function getDestination()
    {
        return $this->container['destination'];
    }

    /**
     * Sets destination
     *
     * @param \Boxture\V2\Model\LocationResponse|null $destination destination
     *
     * @return $this
     */
    public function setDestination($destination)
    {
        $this->container['destination'] = $destination;

        return $this;
    }

    /**
     * Gets customer
     *
     * @return \Boxture\V2\Model\UserResponseMinimal|null
     */
    public function getCustomer()
    {
        return $this->container['customer'];
    }

    /**
     * Sets customer
     *
     * @param \Boxture\V2\Model\UserResponseMinimal|null $customer customer
     *
     * @return $this
     */
    public function setCustomer($customer)
    {
        $this->container['customer'] = $customer;

        return $this;
    }

    /**
     * Gets user
     *
     * @return \Boxture\V2\Model\UserResponseMinimal|null
     */
    public function getUser()
    {
        return $this->container['user'];
    }

    /**
     * Sets user
     *
     * @param \Boxture\V2\Model\UserResponseMinimal|null $user user
     *
     * @return $this
     */
    public function setUser($user)
    {
        $this->container['user'] = $user;

        return $this;
    }

    /**
     * Gets courier
     *
     * @return \Boxture\V2\Model\UserResponseMinimal|null
     */
    public function getCourier()
    {
        return $this->container['courier'];
    }

    /**
     * Sets courier
     *
     * @param \Boxture\V2\Model\UserResponseMinimal|null $courier courier
     *
     * @return $this
     */
    public function setCourier($courier)
    {
        $this->container['courier'] = $courier;

        return $this;
    }

    /**
     * Gets company
     *
     * @return \Boxture\V2\Model\CompanyResponseMinimal|null
     */
    public function getCompany()
    {
        return $this->container['company'];
    }

    /**
     * Sets company
     *
     * @param \Boxture\V2\Model\CompanyResponseMinimal|null $company company
     *
     * @return $this
     */
    public function setCompany($company)
    {
        $this->container['company'] = $company;

        return $this;
    }

    /**
     * Gets retailer
     *
     * @return \Boxture\V2\Model\RetailerResponseMinimal|null
     */
    public function getRetailer()
    {
        return $this->container['retailer'];
    }

    /**
     * Sets retailer
     *
     * @param \Boxture\V2\Model\RetailerResponseMinimal|null $retailer retailer
     *
     * @return $this
     */
    public function setRetailer($retailer)
    {
        $this->container['retailer'] = $retailer;

        return $this;
    }

    /**
     * Gets lines
     *
     * @return \Boxture\V2\Model\ShipmentLineResponse[]|null
     */
    public function getLines()
    {
        return $this->container['lines'];
    }

    /**
     * Sets lines
     *
     * @param \Boxture\V2\Model\ShipmentLineResponse[]|null $lines lines
     *
     * @return $this
     */
    public function setLines($lines)
    {
        $this->container['lines'] = $lines;

        return $this;
    }

    /**
     * Gets shipmentStateTransitions
     *
     * @return \Boxture\V2\Model\ShipmentStateTransitionResponse[]|null
     */
    public function getShipmentStateTransitions()
    {
        return $this->container['shipmentStateTransitions'];
    }

    /**
     * Sets shipmentStateTransitions
     *
     * @param \Boxture\V2\Model\ShipmentStateTransitionResponse[]|null $shipmentStateTransitions shipmentStateTransitions
     *
     * @return $this
     */
    public function setShipmentStateTransitions($shipmentStateTransitions)
    {
        $this->container['shipmentStateTransitions'] = $shipmentStateTransitions;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


